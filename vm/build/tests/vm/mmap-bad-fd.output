Kernel command line: -q -f put mmap-bad-fd run mmap-bad-fd
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  209,510,400 loops/s.
hd0:0: detected 337 sector (168 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 103 sector (51 kB) disk, model "QEMU HARDDISK", serial "QM00003"
hd1:1: detected 8,064 sector (3 MB) disk, model "QEMU HARDDISK", serial "QM00004"
Formatting file system...done.
Boot complete.
Putting 'mmap-bad-fd' into the file system...
Executing 'mmap-bad-fd':
(mmap-bad-fd) begin
(mmap-bad-fd) try to mmap invalid fd
Kernel PANIC at ../../userprog/syscall.c:285 in call_mmap(): assertion `file != NULL' failed.
Call stack: 0x800421868e 0x800421e534 0x800421eada 0x800421dba4 0x40012d 0x400c03 0x400c4c 0.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 70 ticks
Thread: 32 idle ticks, 37 kernel ticks, 1 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 80 reads, 234 writes
hd1:0: 103 reads, 0 writes
hd1:1: 0 reads, 0 writes
Console: 1266 characters output
Key