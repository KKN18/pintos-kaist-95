Kernel command line: -q -f put syn-write put child-syn-wrt run syn-write
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  144,384,000 loops/s.
hd0:0: detected 337 sector (168 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 226 sector (113 kB) disk, model "QEMU HARDDISK", serial "QM00003"
hd1:1: detected 8,064 sector (3 MB) disk, model "QEMU HARDDISK", serial "QM00004"
Formatting file system...done.
Boot complete.
Putting 'syn-write' into the file system...
Putting 'child-syn-wrt' into the file system...
Executing 'syn-write':
(syn-write) begin
(syn-write) create "stuff"
(syn-write) exec child 1 of 10: "child-syn-wrt 0"
(syn-write) exec child 2 of 10: "child-syn-wrt 1"
(syn-write) exec child 3 of 10: "child-syn-wrt 2"
(syn-write) exec child 4 of 10: "child-syn-wrt 3"
(syn-write) exec child 5 of 10: "child-syn-wrt 4"
child-syn-wrt: exit(-1)
Kernel PANIC at ../../threads/synch.c:206 in lock_acquire(): assertion `!lock_held_by_current_thread (lock)' failed.
Call stack: 0x800421868e 0x800420ac8c 0x800420c784 0x800422290c 0x8004222538 0x80042226ed 0x800421c507 0x800421c4d3 0x8004207226 0x800421ddb3 0x8004222228 0x800421d926 0x80042097a0 0x8004209bbe 0x800420c85e 0x800422290c 0x8004222538 0x80042226ed 0x800421c507 0x800421c4d3 0x8004207226 0x800421c151 0x8004207656.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 87 ticks
Thread: 39 idle ticks, 40 kernel ticks, 8 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 131 reads, 512 writes
hd1:0: 226 reads, 0 writes
hd1:1: 0 reads, 0 writes
Console: 1829 characters output
Key