Kernel command line: -q -f put fork-boundary run fork-boundary
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  104,755,200 loops/s.
hd0:0: detected 337 sector (168 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 106 sector (53 kB) disk, model "QEMU HARDDISK", serial "QM00003"
hd1:1: detected 8,064 sector (3 MB) disk, model "QEMU HARDDISK", serial "QM00004"
Formatting file system...done.
Boot complete.
Putting 'fork-boundary' into the file system...
Executing 'fork-boundary':
(fork-boundary) begin
(fork-boundary) fork
(fork-boundary) wait
(fork-boundary) wait: FAILED
fork-boundary: exit(1)
Interrupt 0x0d (#GP General Protection Exception) at rip=8004218c42
 cr2=0000000000605ffa error=               0
rax cccccccccccccccc rbx 0000008004243168 rcx 0000000000000020 rdx 00000080042460b8
rsp 0000008004243d50 rbp 0000008004243d60 rsi 00000080042460b8 rdi 00000080042460b8
rip 0000008004218c42 r8 0000008004243e08  r9 000000800421bb07 r10 0000000000000000
r11 0000000000000202 r12 000000800421e327 r13 0000000104243000 r14 000000800422bfb8
r15 0000008004243ef0 rflags 00000206
es: 001b ds: 001b cs: 0008 ss: 0010
Kernel PANIC at ../../userprog/exception.c:98 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x800421868e 0x800421d82f 0x80042097a0 0x8004209bbe 0x8004218e40 0x800420c7a2 0x800422290c 0x8004222538 0x80042226ed 0x800421c507 0x800421c4d3 0x8004207226 0x800421ddb3 0x800421e398 0x800421da53 0x400552 0x4001d6 0x400302 0x400da3 0.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 72 ticks
Thread: 34 idle ticks, 29 kernel ticks, 9 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 80 reads, 240 writes
hd1:0: 106 reads, 0 writes
hd1:1: 0 reads, 0 writes
Console: 2013 characters output
Key